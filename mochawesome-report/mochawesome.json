{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-07T15:20:59.644Z",
    "end": "2021-12-07T15:21:08.303Z",
    "duration": 8659,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e300f92b-dc76-49eb-9881-7f68aa9eefd2",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "347f1a6d-11a8-421e-8648-2f1d4bd59ba7",
          "title": "UI tests",
          "fullFile": "C:\\Users\\user\\Documents\\forWork\\candidate-test\\src\\tests\\restaurant-ui.spec.ts",
          "file": "C:\\Users\\user\\Documents\\forWork\\candidate-test\\src\\tests\\restaurant-ui.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: Start browser in \"UI tests\"",
              "fullTitle": "UI tests \"before each\" hook: Start browser in \"UI tests\"",
              "timedOut": false,
              "duration": 1252,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    browser = new browser_1.Browser();\n                    return [4 /*yield*/, browser.navigateToUrl(baseUiUrl)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "46115105-e37a-436e-88e5-15d07630f5ef",
              "parentUUID": "347f1a6d-11a8-421e-8648-2f1d4bd59ba7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook: Close browser in \"UI tests\"",
              "fullTitle": "UI tests \"after each\" hook: Close browser in \"UI tests\"",
              "timedOut": false,
              "duration": 266,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, browser.close()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "e94bde16-a59e-4dfa-9659-c733799c1861",
              "parentUUID": "347f1a6d-11a8-421e-8648-2f1d4bd59ba7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Add, Verify, Delete",
              "fullTitle": "UI tests Add, Verify, Delete",
              "timedOut": false,
              "duration": 4887,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function () {\n    var page, popup, actualTitle, expectedTitle, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                page = new restaurant_page_1.RestaurantPage(browser);\n                return [4 /*yield*/, page.openCreateRestaurantPopup()];\n            case 1:\n                popup = _c.sent();\n                return [4 /*yield*/, popup.init()];\n            case 2:\n                _c.sent();\n                return [4 /*yield*/, popup.getTitle()];\n            case 3:\n                actualTitle = _c.sent();\n                expectedTitle = \"Create new restaurant\";\n                (0, chai_1.expect)(actualTitle).to.equal(expectedTitle, 'Restaurants popup was not opened');\n                return [4 /*yield*/, page.fillTheNewRestPopUp(\"123\", \"frog\", \"Barca\", \"9.8\")];\n            case 4:\n                _c.sent();\n                return [4 /*yield*/, page.clickOnAccept()];\n            case 5:\n                _c.sent();\n                return [4 /*yield*/, page.checkSucceedPopUp()];\n            case 6:\n                _c.sent();\n                _a = chai_1.expect;\n                return [4 /*yield*/, page.ifMyRestInPage()];\n            case 7:\n                _a.apply(void 0, [_c.sent()]).to.true;\n                return [4 /*yield*/, page.deleteMyRest()];\n            case 8:\n                _c.sent();\n                return [4 /*yield*/, page.checkSucceedPopUp()];\n            case 9:\n                _c.sent();\n                _b = chai_1.expect;\n                return [4 /*yield*/, page.validationRestIDNotInTable()];\n            case 10:\n                _b.apply(void 0, [_c.sent()]).to.true;\n                return [2 /*return*/];\n        }\n    });\n});",
              "err": {},
              "uuid": "359a8775-f1b3-46b7-9887-538a27bac573",
              "parentUUID": "347f1a6d-11a8-421e-8648-2f1d4bd59ba7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "359a8775-f1b3-46b7-9887-538a27bac573"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4887,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "27efb3e3-a471-4b71-9a8b-408f935ac237",
          "title": "Restaurants tests",
          "fullFile": "C:\\Users\\user\\Documents\\forWork\\candidate-test\\src\\tests\\restaurant.spec.ts",
          "file": "C:\\Users\\user\\Documents\\forWork\\candidate-test\\src\\tests\\restaurant.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Reset restaurant server in \"Restaurants tests\"",
              "fullTitle": "Restaurants tests \"before all\" hook: Reset restaurant server in \"Restaurants tests\"",
              "timedOut": false,
              "duration": 442,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: \n                //Arrange\n                return [4 /*yield*/, restaurantsAPI_1.default.resetServer()];\n                case 1:\n                    //Arrange\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "d417a608-c091-4c6a-b26b-178d7647c8b2",
              "parentUUID": "27efb3e3-a471-4b71-9a8b-408f935ac237",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add restaurant",
              "fullTitle": "Restaurants tests Add restaurant",
              "timedOut": false,
              "duration": 688,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        var myNewRest2, addNewRestaurant, restaurantsAfterAddingNew, amountWithNew;\n        var _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    myNewRest2 = { address: \"Ramat Gan\", id: 777, name: \"9Ducks\", score: 10.0 };\n                    return [4 /*yield*/, restaurantsAPI_1.default.createRestaurant(myNewRest2)];\n                case 1:\n                    addNewRestaurant = _b.sent();\n                    return [4 /*yield*/, restaurantsAPI_1.default.getRestaurants()];\n                case 2:\n                    restaurantsAfterAddingNew = _b.sent();\n                    amountWithNew = (_a = restaurantsAfterAddingNew.data) === null || _a === void 0 ? void 0 : _a.length;\n                    //Assert Add\n                    (0, chai_1.expect)(addNewRestaurant.success).to.true;\n                    (0, chai_1.expect)(addNewRestaurant.status).to.equal(200 | 201);\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "78ff39ed-f703-44cc-b584-2869b79385ef",
              "parentUUID": "27efb3e3-a471-4b71-9a8b-408f935ac237",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "reset restaurant",
              "fullTitle": "Restaurants tests reset restaurant",
              "timedOut": false,
              "duration": 412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        var resetToDefault;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, restaurantsAPI_1.default.resetAll()];\n                case 1:\n                    resetToDefault = _a.sent();\n                    //Assert \n                    (0, chai_1.expect)(resetToDefault.success).to.true;\n                    (0, chai_1.expect)(resetToDefault.status).to.equal(200 | 201);\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "bfa0b18a-c5c3-42c1-9c7a-0759a7b21147",
              "parentUUID": "27efb3e3-a471-4b71-9a8b-408f935ac237",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete restaurant",
              "fullTitle": "Restaurants tests Delete restaurant",
              "timedOut": false,
              "duration": 697,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        var myRest, deleteRest, getByIdResponse;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    myRest = { address: \"Ramat Gan\", id: 777, name: \"9Ducks\", score: 10.0 };\n                    return [4 /*yield*/, restaurantsAPI_1.default.deleteRestByID(777)];\n                case 1:\n                    deleteRest = _a.sent();\n                    return [4 /*yield*/, restaurantsAPI_1.default.getRestaurantById(myRest.id)\n                        //Assert Delete\n                    ];\n                case 2:\n                    getByIdResponse = _a.sent();\n                    //Assert Delete\n                    (0, chai_1.expect)(deleteRest.success).to.true;\n                    (0, chai_1.expect)(deleteRest.status).to.equal(200);\n                    //   expect(amountAfterDel).to.equal(3, 'Restaurants amount is as expected');\n                    (0, chai_1.expect)(getByIdResponse.error).to.equal(\"restaurant with given id not found\");\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "6af44ff3-9b82-42cd-8ed3-71ec0c049e18",
              "parentUUID": "27efb3e3-a471-4b71-9a8b-408f935ac237",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78ff39ed-f703-44cc-b584-2869b79385ef",
            "bfa0b18a-c5c3-42c1-9c7a-0759a7b21147",
            "6af44ff3-9b82-42cd-8ed3-71ec0c049e18"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1797,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 20000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}